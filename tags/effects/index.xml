<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>effects on José Villegas</title>
    <link>https://jose-villegas.github.io/tags/effects/</link>
    <description>Recent content in effects on José Villegas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Jun 2017 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://jose-villegas.github.io/tags/effects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simple Multi-texture Terrain Rendering</title>
      <link>https://jose-villegas.github.io/post/terrain/</link>
      <pubDate>Mon, 19 Jun 2017 00:00:00 +0200</pubDate>
      
      <guid>https://jose-villegas.github.io/post/terrain/</guid>
      <description>&lt;p&gt;This is a simple implementation of terrain rendering using heighmaps, part of a college assignment. The code has some optimizations such as parallel processing to bake lightmaps and cheap ambient occlusion using the terrain heighmap.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Volume Rendering with Style Transfer Function</title>
      <link>https://jose-villegas.github.io/post/styletransfer/</link>
      <pubDate>Sun, 14 May 2017 00:00:00 +0200</pubDate>
      
      <guid>https://jose-villegas.github.io/post/styletransfer/</guid>
      <description>&lt;p&gt;This technique implements style transfer functions for volume rendering, part of a college assignment. Style transfer is extremely convenient for volume rendering as it adds a really great dimension of realism with little overhead. The technique is based on this &lt;a href=&#34;https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.230.9247&amp;amp;rep=rep1&amp;amp;type=pdf&#34;&gt;paper&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Low Poly Water in Unity</title>
      <link>https://jose-villegas.github.io/post/low_poly_water/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0200</pubDate>
      
      <guid>https://jose-villegas.github.io/post/low_poly_water/</guid>
      <description>&lt;p&gt;I wanted to do a small tests with shaders in Unity to simulate water using sum of sines. This technique is well explained here in &lt;a href=&#34;https://developer.nvidia.com/sites/all/modules/custom/gpugems/books/GPUGems/gpugems_ch01.html&#34;&gt;GPU GEMS&lt;/a&gt;. My twist was just using flat shading. The reposity was well received in my &lt;a href=&#34;https://github.com/jose-villegas/LowPolyWater&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fur Rendering in Unity</title>
      <link>https://jose-villegas.github.io/post/fur_unity/</link>
      <pubDate>Thu, 12 Jan 2017 00:00:00 +0200</pubDate>
      
      <guid>https://jose-villegas.github.io/post/fur_unity/</guid>
      <description>&lt;p&gt;This is a small shader that implements fur rendering in Unity using shell texturing. The technique is well explained on this &lt;a href=&#34;https://research.microsoft.com/~hoppe/fur.pdf&#34;&gt;paper&lt;/a&gt;. Though easy to implement it was well received on my &lt;a href=&#34;https://github.com/jose-villegas/FurRendering&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Stereoscopy</title>
      <link>https://jose-villegas.github.io/post/stereoscopic/</link>
      <pubDate>Sun, 11 Sep 2016 00:00:00 +0200</pubDate>
      
      <guid>https://jose-villegas.github.io/post/stereoscopic/</guid>
      <description>&lt;p&gt;Stereoscopy is a technique that enables us to create the illusion of depth for binocular vision. You need special lenses to appreciate the effect. In this college project I implemented a basic rendering engine using C++ with stereoscopy.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Computer Graphics Basic Mapping Techniques</title>
      <link>https://jose-villegas.github.io/post/firstcg/</link>
      <pubDate>Wed, 03 Dec 2014 00:00:00 +0100</pubDate>
      
      <guid>https://jose-villegas.github.io/post/firstcg/</guid>
      <description>&lt;p&gt;When I first started to study computer graphics in my college, this was one of the first assignments, we implemented different real time rendering techniques for this project which included: object selection, translations, rotations and scaling, camera translation and rotation, refraction and reflection, point lights, directional lights, spot lights and shadow mapping.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ASCII Filter for WebCam</title>
      <link>https://jose-villegas.github.io/post/asciiwebcam/</link>
      <pubDate>Fri, 28 Nov 2014 00:00:00 +0100</pubDate>
      
      <guid>https://jose-villegas.github.io/post/asciiwebcam/</guid>
      <description>&lt;p&gt;This program implements an ASCII art filter for your webcam. This was a small project made during college as an exercise of parallel processing. Getting this effect to run smoothly without parallel processing was impossible.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>